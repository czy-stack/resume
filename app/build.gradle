plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
}
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildFeatures {
        viewBinding true
    }
    applicationVariants.all { variant ->
        variant.outputs.all { // 遍历所有的输出类型，一般是debug和release
            //定义apk的名字，拼接variant的版本号
            def apkName = "_${variant.versionName}"
            //判断是否为空
            if (!variant.flavorName.isEmpty()) {
                apkName += "_${variant.flavorName}"
            }
            //赋值属性
            outputFileName = "LitePal"
//            if (GATEWAY.toString() == "production") {
//                outputFileName = "resume_production"
//            } else if (GATEWAY.toString() == "test") {
//                outputFileName =  "resume_test"
//            } else if (GATEWAY.toString() == "develop") {
//                outputFileName =  "resume_develop"
//            }

            String time = new Date().format("_YYYYMMddHH")
            if (variant.buildType.name == "release") {
                outputFileName += apkName = "_release" + time + ".apk"
            } else {
                outputFileName += apkName = "_debug" + time + ".apk"
            }
        }
    }
    defaultConfig {
        applicationId "com.android.resume"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        ndk {
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
        }
//        switch (GATEWAY) {
//            case "production":
//                buildConfigField 'Integer', 'GATEWAY', '0'
//                break
//            case "test":
//                buildConfigField 'Integer', 'GATEWAY', '1'
//                break
//            case "develop":
//                buildConfigField 'Integer', 'GATEWAY', '2'
//                break
//        }
//        buildConfigField 'Integer', 'APPTYPE', APP_TYPE
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            zipAlignEnabled true
        }
    }

    flavorDimensions "app","environment"
    productFlavors{
        //正式包
//        resume {
//            resValue "string", "app_name", "Resume"//正式环境下app名称
//            dimension "app"
//        }
        //测试包
//        resumetest {
//            resValue "string", "app_name", "Resume_Text"//测试环境下app名称
//            dimension "app"
//        }
        production{
            dimension "environment"
            buildConfigField('String','BASE_URL','"http://183.134.216.111:18003/"')
        }
        envtest{
            dimension "environment"
            buildConfigField('String','BASE_URL','"http://183.134.216.111:18003/"')
        }
        ocr{
            dimension "app"
            applicationId "com.android.ocr"
        }
        camera{
            dimension "app"
            applicationId "com.android.camera"
        }
        sign{
            dimension "app"
            applicationId "com.android.sign"
        }
        sudo{
            dimension "app"
            applicationId "com.android.sudo"
        }
        kotlin{
            dimension "app"
            applicationId "com.android.kotlin"
        }
        jetpack{
            dimension "app"
            applicationId "com.android.jetpack"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':common')
    implementation project(path: ':sign')
    implementation project(path: ':kotlin')
    implementation project(path: ':java')
    implementation project(path: ':jetpack')
    implementation project(path: ':sudo')
    debugImplementation "com.squareup.leakcanary:$leakcanary"
    implementation "com.aliyun.ams:alicloud-android-hotfix:$hotfix"

}
